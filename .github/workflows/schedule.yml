# example schedule release
# https://docs.github.com/en/free-pro-team@latest/rest/reference/repos#create-a-release
# using calver https://calver.org/calendar_versioning.html
# calver YYYY.0M.0D.MICRO
# using semver https://semver.org/
# semver MAJOR.MINOR.PATCH.pre-release

name: Scheduled  automated release

on:
  # Enable active on push for testing only
  push:
  schedule:
    - cron: "* * * * *" # Run every minute, e.g. for testing only
    #- cron: "0 * * * *" # Every hour
    #- cron: '0 0 * * *' # Once a day
    #- cron: '0 0 1 * *' # Once per month
    #- cron: '0 0 1 */2 *' # Every other month (1st day of month)

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v2
    - name: Get current date
      id: date
      run: echo "::set-output name=date::$(date +'%Y.%m.%d.%Hh%Mm')"
    - name: Get release notes
      # Takes release notes text from a named file in the main repo
      id: notes
      run: echo ::set-output name=notes::$(cat RELEASE-NOTES)
    - name: Get version
      # Takes current version number from a named file in the main repo
      id: vars
      run: echo ::set-output name=version::$(cat VERSION)
    - name: Get body data
      # Creates json format content to pass to curl request to the github API
      id: body
      # Escape chars used to format output as required for curl data body (single quotes around double quotes)
      # Normal use of single quotes prevents expansion of named variables
      # Better to format this way as difficult to pass indiv env vars to curl
      run: echo ::set-output name=body::$(echo $'\''{"$TAG", "$PRERELEASE", "$NOTES"}$'\'')
      env:
        TAG: '"tag_name":"v${{ steps.vars.outputs.version }}.rc-${{ steps.date.outputs.date }}"'
        PRERELEASE: '"prerelease": true'
        NOTES: '"body":"${{ steps.notes.outputs.notes }}"'
    - name: Test output
      run: | 
        echo ${{ steps.vars.outputs.version }}
        echo ${{ steps.notes.outputs.notes }}
        echo ${{ steps.date.outputs.date }}
        echo ${{ steps.body.outputs.body }}
    - name: Create a repo level release event      
      run: | 
        curl -X POST \
        -H "Accept: application/vnd.github.v3+json" \
        -u ${{ secrets.ACCESS_TOKEN }} \
        https://api.github.com/repos/cma-open/cmascience/releases \
        -d  ${{ steps.body.outputs.body }}

 
