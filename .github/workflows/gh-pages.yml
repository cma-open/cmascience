# Content inspired from these sources
# https://github.com/ammaraskar/sphinx-action-test/blob/master/.github/workflows/default.yml
# https://www.innoq.com/en/blog/github-actions-automation/
# https://github.com/marketplace/actions/publish-to-git
# https://github.com/seanmiddleditch/gha-publish-to-git/blob/master/entrypoint.sh
# https://github.com/JacksonMaxfield/github-pages-deploy-action-python/blob/master/entrypoint.sh


name: gh-pages

# Ensure pages only re-built after pushes to master branch not feature branches
on:
  push:
    branches:    
      - master
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
      #with:
        #repo-token: ${{ secrets.GITHUB_TOKEN }}
    - name: Install dependencies
      run: |
        conda update conda
        conda env create -f bin/environment.yml
    - name: Install cmascience
      run: |
        source /usr/share/miniconda/etc/profile.d/conda.sh
        conda activate cmascience-env
        python setup.py install
    - name: Build and publish Sphinx documentation to gh-pages
      run: |
        source /usr/share/miniconda/etc/profile.d/conda.sh
        conda activate cmascience-env
        
        # Setup the username and email.
        git config user.name "$GITHUB_ACTOR"
        git config user.email "${GITHUB_ACTOR}@users.noreply.github.com"
        git config pull.rebase true   # rebase
       
        # 
        #repo_uri="https://x-access-token:${GITHUB_TOKEN}@github.com/${GITHUB_REPOSITORY}.git"
        repo_uri="https://x-access-token:${DEPLOY_TOKEN}@github.com/${GITHUB_REPOSITORY}.git"
       
        git checkout gh-pages
        git rebase origin/master
       
        cd bin
        chmod +x build-sphinx-docs.sh
        # Build the html documentation with sphinx
        ./build-sphinx-docs.sh
        
        echo $PWD
        echo "Documentation built"
        cd  ..
        echo $PWD
        cd docs/build
        echo $PWD
        git status
        echo "testing"
        echo $PWD
        
        #git checkout --theirs gh-pages
        #git checkout -f gh-pages
        #git pull origin gh-docs-pages 
        
        git add -f _static
        git add -f _sources
        git add -f *.html
        git add -f *.inv
        git add -f *.js
        git add .

        git status
        echo "here >>>>"
        
        git commit -m "Update documentation on gh-pages" -a || true
        #git commit -m "Update documentation on gh-pages"
        #if [ $? -ne 0 ]; then
        #   echo "nothing to commit"
        #   exit 0
        #fi
        
        echo "Push changes to gh-pages branch"
        git remote set-url origin "$repo_uri" # includes access token
        
        git push --force-with-lease origin gh-pages
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        DEPLOY_TOKEN: ${{ secrets.DEPLOY_TOKEN }}
